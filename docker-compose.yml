services:
  postgres:
    image: postgres:15-alpine
    container_name: wazmeow-postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - wazmeow-network

  dbgate:
    image: dbgate/dbgate:latest
    container_name: wazmeow-dbgate
    depends_on:
      - postgres
    environment:
      CONNECTIONS: con1
      LABEL_con1: WazMeow PostgreSQL
      SERVER_con1: postgres
      USER_con1: ${DB_USER}
      PASSWORD_con1: ${DB_PASSWORD}
      PORT_con1: ${DB_PORT}
      ENGINE_con1: postgres@dbgate-plugin-postgres
      DATABASE_con1: ${DB_NAME}
    ports:
      - "3000:3000"
    networks:
      - wazmeow-network
    restart: unless-stopped

  wazmeow:
    build: .
    container_name: wazmeow-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database Configuration
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_SSLMODE: ${DB_SSLMODE}
      DB_DEBUG: ${DB_DEBUG}

      # Server Configuration
      SERVER_HOST: ${SERVER_HOST}
      SERVER_PORT: ${SERVER_PORT}

      # WhatsApp Configuration
      WA_DEBUG: ${WA_DEBUG}
      WA_OS_NAME: ${WA_OS_NAME}

      # Logging Configuration
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_FORMAT: ${LOG_FORMAT}

      # SSL Configuration (optional)
      SSL_CERT_FILE: ${SSL_CERT_FILE}
      SSL_KEY_FILE: ${SSL_KEY_FILE}
    ports:
      - "8080:8080"
    networks:
      - wazmeow-network
    restart: unless-stopped
    # Para ver QR codes no terminal em produção
    stdin_open: true
    tty: true

volumes:
  postgres_data:

networks:
  wazmeow-network:
    driver: bridge